parent_table={{49, "v"}, {10, "i"}, {63, "n"}, {141, "w"}, {209, "l"}, {174, "r"}, {218, "y"}, {46, "d"}, {249, "l"}, {140, "k"}, {27, "w"}, {280, "d"}, {5, "f"}, {309, "a"}, {132, "k"}, {62, "e"}, {13, "v"}, {78, "d"}, {88, "r"}, {30, "e"}, {65, "p"}, {182, "r"}, {6, "i"}, {16, "k"}, {19, "e"}, {128, "g"}, {175, "i"}, {234, "i"}, {267, "e"}, {142, "f"}, {289, "g"}, {332, "f"}, {206, "f"}, {255, "e"}, {4, "v"}, {67, "l"}, {259, "a"}, {268, "e"}, {190, "l"}, {82, "i"}, {163, "a"}, {56, "i"}, {138, "h"}, {223, "e"}, {125, "v"}, {95, "t"}, {124, "f"}, {52, "l"}, {20, "d"}, {147, "v"}, {149, "g"}, {225, "r"}, {108, "f"}, {96, "p"}, {188, "r"}, {219, "h"}, {251, "k"}, {197, "l"}, {239, "a"}, {230, "k"}, {293, "f"}, {327, "i"}, {130, "w"}, {139, "p"}, {260, "g"}, {246, "t"}, {166, "k"}, {31, "k"}, {287, "n"}, {155, "i"}, {326, "k"}, {153, "g"}, {59, "e"}, {48, "l"}, {15, "i"}, {296, "r"}, {99, "l"}, {81, "d"}, {98, "v"}, {264, "d"}, {317, "p"}, {210, "a"}, {329, "k"}, {23, "e"}, {50, "t"}, {57, "d"}, {11, "p"}, {290, "g"}, {304, "a"}, {192, "a"}, {238, "i"}, {66, "k"}, {144, "g"}, {172, "n"}, {123, "r"}, {33, "i"}, {302, "l"}, {156, "g"}, {36, "e"}, {118, "v"}, {244, "v"}, {186, "v"}, {273, "n"}, {100, "t"}, {226, "l"}, {157, "l"}, {171, "f"}, {114, "t"}, {169, "k"}, {97, "d"}, {202, "r"}, {86, "t"}, {193, "e"}, {1, "k"}, {281, "n"}, {7, "t"}, {275, "e"}, {55, "r"}, {236, "i"}, {131, "k"}, {241, "g"}, {119, "v"}, {292, "s"}, {303, "v"}, {164, "i"}, {106, "l"}, {321, "n"}, {322, "r"}, {41, "k"}, {58, "k"}, {14, "g"}, {258, "i"}, {297, "e"}, {205, "d"}, {94, "n"}, {282, "v"}, {328, "r"}, {115, "a"}, {136, "a"}, {316, "p"}, {185, "e"}, {318, "t"}, {25, "e"}, {167, "r"}, {90, "i"}, {196, "p"}, {242, "k"}, {180, "r"}, {28, "g"}, {199, "d"}, {200, "l"}, {270, "p"}, {288, "i"}, {22, "f"}, {53, "s"}, {148, "y"}, {143, "l"}, {261, "a"}, {9, "e"}, {21, "e"}, {87, "k"}, {129, "e"}, {262, "g"}, {74, "a"}, {215, "r"}, {252, "a"}, {276, "l"}, {110, "l"}, {263, "l"}, {311, "k"}, {76, "g"}, {113, "a"}, {69, "i"}, {112, "l"}, {111, "l"}, {207, "v"}, {294, "g"}, {40, "k"}, {194, "f"}, {216, "e"}, {320, "v"}, {38, "l"}, {313, "g"}, {26, "v"}, {217, "t"}, {271, "y"}, {220, "l"}, {319, "l"}, {279, "l"}, {323, "e"}, {272, "y"}, {228, "l"}, {105, "d"}, {265, "v"}, {43, "k"}, {92, "v"}, {83, "e"}, {24, "v"}, {12, "e"}, {64, "a"}, {121, "g"}, {61, "f"}, {160, "i"}, {222, "n"}, {204, "s"}, {274, "e"}, {295, "a"}, {301, "e"}, {158, "g"}, {8, "r"}, {42, "v"}, {269, "e"}, {315, "i"}, {116, "r"}, {151, "t"}, {165, "a"}, {183, "k"}, {208, "v"}, {85, "a"}, {189, "e"}, {285, "t"}, {308, "i"}, {73, "y"}, {35, "r"}, {75, "v"}, {107, "a"}, {250, "v"}, {305, "k"}, {310, "f"}, {312, "r"}, {146, "d"}, {231, "k"}, {18, "l"}, {145, "y"}, {179, "s"}, {181, "t"}, {245, "d"}, {233, "a"}, {77, "y"}, {161, "g"}, {284, "l"}, {298, "g"}, {122, "d"}, {159, "r"}, {54, "e"}, {307, "l"}, {211, "v"}, {212, "p"}, {39, "l"}, {104, "a"}, {247, "n"}, {286, "p"}, {109, "a"}, {34, "p"}, {60, "v"}, {93, "t"}, {101, "d"}, {133, "r"}, {135, "v"}, {162, "q"}, {178, "y"}, {214, "t"}, {224, "e"}, {221, "i"}, {237, "n"}, {203, "e"}, {45, "v"}, {84, "e"}, {253, "l"}, {89, "g"}, {168, "a"}, {137, "w"}, {213, "l"}, {257, "w"}, {306, "n"}, {325, "i"}, {330, "p"}, {2, "p"}, {70, "v"}, {120, "k"}, {243, "v"}, {278, "k"}, {195, "k"}, {3, "k"}, {283, "v"}, {91, "y"}, {235, "l"}, {127, "s"}, {47, "a"}, {134, "g"}, {72, "n"}, {254, "k"}, {324, "v"}, {248, "a"}, {331, "g"}, {177, "y"}, {68, "r"}, {79, "n"}, {152, "i"}, {102, "a"}, {44, "e"}, {314, "e"}, {266, "f"}, {277, "f"}, {154, "i"}, {291, "h"}, {187, "e"}, {227, "k"}, {198, "e"}, {201, "l"}, {232, "t"}, {126, "r"}, {37, "i"}, {32, "e"}, {150, "k"}, {240, "r"}, {170, "g"}, {29, "d"}, {80, "i"}, {103, "t"}, {176, "l"}, {117, "h"}, {184, "e"}, {300, "a"}, {71, "a"}, {256, "g"}, {191, "n"}}

count = 0
for throwaway, pair in pairs(parent_table) do
cur = structure.GetAminoAcid(pair[1]) 
  if cur == pair[2] then
    --
  else
    print("Looking at position", pair[1])
    print("Wild type has", pair[2])
    print("Current pose has", cur) 
    print("Mutation: ", pair[2], "to", cur, "at", pair[1])
    structure.SetAminoAcid(pair[1], pair[2])
    count = count + 1 
  end
end
print("Displaying native residues as", count, "mutations to this design")

