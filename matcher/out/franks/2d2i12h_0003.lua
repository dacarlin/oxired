parent_table={{98, "s"}, {73, "t"}, {181, "t"}, {273, "k"}, {290, "g"}, {319, "s"}, {152, "n"}, {316, "y"}, {242, "v"}, {147, "f"}, {261, "n"}, {220, "a"}, {141, "e"}, {177, "t"}, {198, "l"}, {262, "e"}, {338, "g"}, {84, "n"}, {42, "t"}, {216, "a"}, {139, "d"}, {305, "m"}, {255, "t"}, {310, "v"}, {123, "a"}, {218, "a"}, {75, "k"}, {59, "d"}, {320, "w"}, {224, "p"}, {100, "g"}, {315, "w"}, {34, "i"}, {336, "k"}, {16, "n"}, {300, "s"}, {200, "r"}, {329, "l"}, {210, "p"}, {291, "t"}, {159, "c"}, {25, "q"}, {180, "t"}, {183, "s"}, {58, "a"}, {222, "v"}, {8, "n"}, {63, "d"}, {258, "e"}, {124, "p"}, {249, "v"}, {324, "q"}, {160, "l"}, {197, "d"}, {178, "m"}, {235, "l"}, {48, "e"}, {325, "r"}, {167, "l"}, {40, "a"}, {239, "t"}, {313, "i"}, {308, "d"}, {43, "a"}, {236, "r"}, {266, "k"}, {297, "v"}, {41, "r"}, {252, "e"}, {22, "f"}, {72, "k"}, {86, "p"}, {88, "k"}, {76, "i"}, {148, "a"}, {21, "w"}, {146, "d"}, {103, "v"}, {137, "v"}, {184, "y"}, {186, "l"}, {195, "h"}, {205, "a"}, {53, "t"}, {240, "p"}, {187, "d"}, {44, "a"}, {264, "l"}, {36, "n"}, {38, "s"}, {47, "l"}, {162, "p"}, {87, "w"}, {251, "v"}, {185, "t"}, {326, "v"}, {94, "l"}, {66, "s"}, {203, "a"}, {95, "v"}, {256, "i"}, {104, "t"}, {71, "g"}, {327, "v"}, {3, "i"}, {19, "r"}, {142, "y"}, {61, "s"}, {166, "v"}, {189, "r"}, {192, "d"}, {211, "t"}, {294, "s"}, {221, "l"}, {287, "d"}, {278, "y"}, {272, "m"}, {119, "v"}, {274, "g"}, {225, "e"}, {18, "l"}, {288, "f"}, {292, "d"}, {265, "q"}, {311, "k"}, {253, "k"}, {33, "a"}, {85, "l"}, {241, "n"}, {289, "r"}, {127, "a"}, {172, "g"}, {157, "t"}, {243, "s"}, {170, "n"}, {52, "v"}, {321, "g"}, {117, "k"}, {286, "s"}, {304, "v"}, {108, "a"}, {165, "k"}, {125, "g"}, {112, "i"}, {231, "n"}, {26, "n"}, {217, "k"}, {49, "y"}, {337, "s"}, {29, "l"}, {68, "t"}, {163, "v"}, {207, "n"}, {133, "y"}, {263, "v"}, {128, "e"}, {171, "f"}, {199, "r"}, {140, "s"}, {334, "a"}, {93, "d"}, {106, "e"}, {168, "h"}, {303, "l"}, {27, "t"}, {332, "l"}, {62, "y"}, {296, "i"}, {333, "a"}, {298, "d"}, {55, "r"}, {277, "k"}, {70, "n"}, {248, "v"}, {302, "t"}, {212, "t"}, {260, "v"}, {136, "g"}, {122, "t"}, {215, "a"}, {114, "a"}, {270, "t"}, {275, "i"}, {89, "e"}, {4, "r"}, {323, "s"}, {174, "i"}, {257, "t"}, {295, "s"}, {54, "g"}, {279, "s"}, {285, "s"}, {118, "k"}, {169, "d"}, {190, "i"}, {206, "v"}, {30, "e"}, {64, "e"}, {23, "g"}, {238, "p"}, {331, "e"}, {113, "q"}, {268, "s"}, {56, "f"}, {158, "n"}, {81, "n"}, {161, "a"}, {37, "t"}, {15, "r"}, {96, "i"}, {173, "i"}, {208, "i"}, {214, "g"}, {228, "g"}, {250, "q"}, {7, "i"}, {99, "t"}, {115, "g"}, {237, "v"}, {282, "p"}, {219, "v"}, {213, "t"}, {143, "r"}, {306, "d"}, {65, "n"}, {69, "v"}, {9, "g"}, {92, "i"}, {111, "h"}, {233, "i"}, {246, "d"}, {259, "q"}, {138, "n"}, {20, "c"}, {335, "r"}, {330, "a"}, {57, "n"}, {120, "l"}, {299, "s"}, {6, "a"}, {82, "p"}, {283, "l"}, {91, "d"}, {79, "d"}, {135, "i"}, {145, "e"}, {226, "l"}, {312, "v"}, {196, "r"}, {191, "l"}, {232, "g"}, {234, "a"}, {328, "d"}, {31, "v"}, {130, "v"}, {83, "l"}, {276, "i"}, {5, "v"}, {24, "r"}, {90, "w"}, {149, "v"}, {156, "t"}, {271, "t"}, {293, "e"}, {314, "a"}, {1, "m"}, {144, "h"}, {39, "d"}, {14, "g"}, {245, "v"}, {151, "s"}, {229, "k"}, {154, "s"}, {2, "t"}, {179, "t"}, {121, "i"}, {281, "l"}, {267, "a"}, {74, "m"}, {202, "r"}, {13, "a"}, {227, "k"}, {67, "i"}, {45, "h"}, {109, "s"}, {50, "d"}, {134, "v"}, {307, "g"}, {244, "v"}, {97, "e"}, {182, "h"}, {230, "l"}, {105, "a"}, {175, "k"}, {188, "q"}, {28, "d"}, {46, "l"}, {223, "i"}, {32, "v"}, {17, "f"}, {204, "a"}, {193, "a"}, {51, "s"}, {10, "f"}, {247, "l"}, {301, "l"}, {12, "h"}, {269, "q"}, {155, "c"}, {77, "v"}, {318, "n"}, {322, "y"}, {280, "d"}, {150, "i"}, {60, "i"}, {126, "k"}, {11, "g"}, {129, "g"}, {110, "k"}, {153, "a"}, {164, "a"}, {194, "s"}, {201, "a"}, {102, "f"}, {209, "v"}, {101, "v"}, {116, "a"}, {107, "g"}, {35, "n"}, {176, "g"}, {254, "p"}, {317, "d"}, {284, "v"}, {309, "l"}, {131, "g"}, {132, "t"}, {80, "r"}, {78, "c"}}

count = 0
for throwaway, pair in pairs(parent_table) do
cur = structure.GetAminoAcid(pair[1]) 
  if cur == pair[2] then
    --
  else
    print("Looking at position", pair[1])
    print("Wild type has", pair[2])
    print("Current pose has", cur) 
    print("Mutation: ", pair[2], "to", cur, "at", pair[1])
    structure.SetAminoAcid(pair[1], pair[2])
    count = count + 1 
  end
end
print("Displaying native residues as", count, "mutations to this design")

