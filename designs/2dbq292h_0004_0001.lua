parent_table={{177, "r"}, {180, "k"}, {44, "v"}, {73, "v"}, {160, "q"}, {151, "g"}, {144, "d"}, {150, "i"}, {208, "v"}, {235, "a"}, {103, "d"}, {89, "y"}, {245, "l"}, {265, "e"}, {269, "n"}, {145, "v"}, {291, "a"}, {252, "g"}, {30, "k"}, {97, "l"}, {236, "r"}, {68, "v"}, {250, "k"}, {251, "e"}, {42, "k"}, {141, "l"}, {234, "i"}, {289, "f"}, {294, "g"}, {41, "v"}, {98, "t"}, {142, "g"}, {295, "a"}, {104, "l"}, {280, "l"}, {153, "i"}, {261, "v"}, {266, "p"}, {241, "d"}, {118, "k"}, {260, "d"}, {217, "l"}, {163, "a"}, {199, "r"}, {276, "d"}, {9, "e"}, {43, "e"}, {173, "l"}, {147, "g"}, {207, "a"}, {213, "e"}, {72, "a"}, {81, "e"}, {323, "r"}, {79, "d"}, {84, "t"}, {70, "n"}, {214, "t"}, {232, "i"}, {305, "f"}, {50, "l"}, {77, "n"}, {95, "d"}, {5, "f"}, {183, "v"}, {202, "d"}, {117, "v"}, {127, "e"}, {108, "l"}, {267, "y"}, {272, "l"}, {91, "t"}, {96, "v"}, {211, "t"}, {49, "t"}, {62, "a"}, {274, "k"}, {196, "d"}, {314, "l"}, {146, "y"}, {192, "k"}, {53, "r"}, {64, "k"}, {220, "e"}, {170, "n"}, {186, "e"}, {275, "l"}, {205, "v"}, {48, "v"}, {319, "v"}, {93, "t"}, {171, "r"}, {298, "v"}, {231, "l"}, {131, "r"}, {190, "e"}, {195, "e"}, {304, "a"}, {225, "l"}, {36, "i"}, {114, "r"}, {40, "k"}, {212, "r"}, {218, "i"}, {187, "l"}, {94, "p"}, {307, "r"}, {125, "s"}, {311, "p"}, {75, "y"}, {13, "v"}, {99, "d"}, {219, "n"}, {243, "n"}, {279, "v"}, {288, "s"}, {270, "e"}, {140, "f"}, {176, "s"}, {21, "f"}, {227, "k"}, {60, "e"}, {17, "l"}, {132, "g"}, {156, "g"}, {240, "v"}, {264, "e"}, {282, "p"}, {326, "g"}, {38, "l"}, {24, "e"}, {78, "i"}, {71, "y"}, {283, "n"}, {313, "t"}, {139, "w"}, {12, "e"}, {256, "g"}, {46, "a"}, {33, "p"}, {39, "k"}, {16, "k"}, {166, "a"}, {303, "i"}, {85, "k"}, {63, "p"}, {122, "f"}, {7, "t"}, {134, "a"}, {152, "i"}, {198, "l"}, {161, "a"}, {273, "f"}, {92, "n"}, {238, "k"}, {268, "y"}, {47, "l"}, {320, "i"}, {137, "p"}, {191, "f"}, {57, "e"}, {158, "i"}, {317, "r"}, {321, "k"}, {149, "t"}, {34, "r"}, {2, "p"}, {155, "l"}, {182, "e"}, {88, "i"}, {102, "a"}, {52, "e"}, {193, "p"}, {255, "a"}, {86, "r"}, {322, "i"}, {59, "f"}, {292, "r"}, {121, "r"}, {216, "h"}, {90, "v"}, {327, "f"}, {23, "v"}, {55, "d"}, {299, "a"}, {107, "a"}, {222, "r"}, {109, "l"}, {65, "l"}, {61, "n"}, {116, "v"}, {56, "k"}, {10, "i"}, {67, "i"}, {112, "t"}, {130, "k"}, {138, "k"}, {19, "d"}, {80, "i"}, {165, "r"}, {206, "l"}, {175, "y"}, {135, "w"}, {184, "e"}, {312, "p"}, {110, "l"}, {113, "a"}, {29, "e"}, {185, "r"}, {27, "g"}, {189, "a"}, {315, "v"}, {179, "r"}, {325, "p"}, {115, "h"}, {15, "i"}, {28, "d"}, {293, "e"}, {229, "a"}, {8, "r"}, {4, "v"}, {1, "k"}, {35, "e"}, {301, "n"}, {237, "g"}, {242, "t"}, {197, "l"}, {100, "a"}, {32, "i"}, {45, "d"}, {20, "e"}, {66, "r"}, {69, "a"}, {226, "k"}, {309, "e"}, {281, "t"}, {148, "k"}, {162, "i"}, {51, "s"}, {172, "i"}, {204, "v"}, {210, "l"}, {209, "p"}, {259, "l"}, {106, "f"}, {124, "r"}, {126, "g"}, {290, "g"}, {316, "n"}, {324, "k"}, {254, "i"}, {271, "e"}, {76, "d"}, {247, "k"}, {258, "g"}, {308, "g"}, {82, "e"}, {120, "d"}, {3, "k"}, {25, "v"}, {300, "k"}, {6, "i"}, {188, "n"}, {181, "e"}, {194, "l"}, {87, "g"}, {249, "l"}, {257, "a"}, {296, "e"}, {310, "i"}, {136, "h"}, {200, "e"}, {248, "a"}, {230, "i"}, {306, "k"}, {164, "k"}, {31, "e"}, {168, "g"}, {233, "n"}, {287, "h"}, {167, "k"}, {143, "y"}, {203, "f"}, {119, "g"}, {286, "g"}, {297, "l"}, {302, "l"}, {159, "g"}, {154, "g"}, {58, "v"}, {253, "w"}, {174, "y"}, {22, "e"}, {123, "v"}, {169, "f"}, {224, "k"}, {105, "a"}, {83, "a"}, {215, "y"}, {223, "l"}, {228, "t"}, {221, "e"}, {244, "a"}, {133, "v"}, {18, "e"}, {201, "s"}, {129, "k"}, {111, "a"}, {246, "v"}, {11, "p"}, {278, "v"}, {74, "g"}, {178, "t"}, {277, "n"}, {285, "g"}, {101, "t"}, {14, "g"}, {318, "e"}, {54, "i"}, {128, "w"}, {37, "l"}, {284, "i"}, {26, "w"}, {239, "v"}, {157, "r"}, {262, "f"}, {263, "e"}}


count = 0
for throwaway, pair in pairs(parent_table) do
  print("Looking at position", pair[1])
  print("Wild type has", pair[2])
  print("Current pose has", cur) 

  cur = structure.GetAminoAcid(pair[1]) 
  if cur == pair[2] then
    -- lua comment
  else
    print("Mutating ", pair[2], "to", cur, "at", pair[1])
    structure.SetAminoAcid(pair[1], pair[2])
    count = count + 1 
  end
end
print("Displaying native residues as", count, "mutations to this design")

