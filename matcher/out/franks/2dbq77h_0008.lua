parent_table={{1, "k"}, {131, "k"}, {246, "t"}, {4, "v"}, {174, "r"}, {81, "d"}, {194, "f"}, {115, "a"}, {63, "n"}, {77, "y"}, {226, "l"}, {24, "v"}, {239, "a"}, {138, "h"}, {245, "d"}, {301, "e"}, {14, "g"}, {189, "e"}, {205, "d"}, {49, "v"}, {62, "e"}, {113, "a"}, {26, "v"}, {153, "g"}, {186, "v"}, {193, "e"}, {185, "e"}, {199, "d"}, {294, "g"}, {304, "a"}, {330, "p"}, {250, "v"}, {305, "k"}, {266, "f"}, {235, "l"}, {240, "r"}, {36, "e"}, {331, "g"}, {319, "l"}, {3, "k"}, {39, "l"}, {187, "e"}, {277, "f"}, {148, "y"}, {183, "k"}, {15, "i"}, {68, "r"}, {85, "a"}, {9, "e"}, {29, "d"}, {61, "f"}, {156, "g"}, {247, "n"}, {162, "q"}, {213, "l"}, {253, "l"}, {147, "v"}, {125, "v"}, {232, "t"}, {67, "l"}, {132, "k"}, {150, "k"}, {43, "k"}, {46, "d"}, {223, "e"}, {188, "r"}, {53, "s"}, {44, "e"}, {48, "l"}, {211, "v"}, {286, "p"}, {224, "e"}, {33, "i"}, {310, "f"}, {25, "e"}, {75, "v"}, {100, "t"}, {121, "g"}, {313, "g"}, {103, "t"}, {254, "k"}, {292, "s"}, {117, "h"}, {176, "l"}, {64, "a"}, {227, "k"}, {303, "v"}, {318, "t"}, {290, "s"}, {59, "e"}, {120, "k"}, {13, "v"}, {204, "s"}, {236, "i"}, {281, "n"}, {302, "l"}, {145, "y"}, {47, "a"}, {317, "p"}, {106, "l"}, {74, "g"}, {241, "g"}, {54, "e"}, {97, "d"}, {118, "v"}, {288, "i"}, {295, "a"}, {308, "i"}, {255, "e"}, {102, "a"}, {136, "a"}, {8, "r"}, {112, "l"}, {134, "g"}, {152, "i"}, {104, "a"}, {215, "r"}, {45, "v"}, {261, "a"}, {40, "k"}, {7, "t"}, {320, "v"}, {66, "k"}, {109, "a"}, {300, "a"}, {165, "a"}, {82, "i"}, {146, "d"}, {65, "p"}, {98, "v"}, {164, "i"}, {208, "v"}, {329, "k"}, {249, "l"}, {58, "k"}, {307, "l"}, {6, "i"}, {101, "d"}, {111, "l"}, {168, "a"}, {291, "a"}, {42, "v"}, {130, "w"}, {124, "f"}, {163, "a"}, {231, "k"}, {279, "l"}, {200, "l"}, {80, "i"}, {119, "v"}, {114, "t"}, {143, "l"}, {27, "w"}, {151, "t"}, {175, "i"}, {214, "t"}, {84, "e"}, {284, "l"}, {324, "v"}, {272, "y"}, {228, "l"}, {178, "y"}, {219, "h"}, {19, "e"}, {216, "e"}, {5, "f"}, {38, "l"}, {90, "i"}, {264, "d"}, {180, "r"}, {237, "n"}, {21, "e"}, {293, "f"}, {133, "r"}, {28, "g"}, {31, "k"}, {170, "g"}, {251, "k"}, {327, "i"}, {297, "e"}, {206, "f"}, {135, "v"}, {209, "l"}, {217, "t"}, {70, "v"}, {265, "v"}, {57, "d"}, {93, "t"}, {171, "f"}, {256, "g"}, {76, "h"}, {210, "a"}, {56, "i"}, {311, "k"}, {172, "n"}, {198, "e"}, {238, "i"}, {16, "k"}, {242, "k"}, {107, "a"}, {20, "d"}, {184, "e"}, {128, "g"}, {332, "f"}, {280, "d"}, {263, "l"}, {298, "g"}, {50, "t"}, {79, "n"}, {95, "t"}, {139, "p"}, {195, "k"}, {285, "t"}, {137, "w"}, {140, "k"}, {179, "s"}, {69, "i"}, {233, "a"}, {122, "d"}, {108, "f"}, {252, "a"}, {72, "n"}, {197, "l"}, {116, "r"}, {278, "k"}, {287, "h"}, {52, "s"}, {270, "p"}, {30, "e"}, {315, "i"}, {127, "s"}, {207, "v"}, {105, "d"}, {190, "l"}, {71, "a"}, {234, "i"}, {177, "y"}, {202, "r"}, {322, "r"}, {225, "r"}, {282, "v"}, {243, "v"}, {96, "p"}, {267, "e"}, {218, "y"}, {283, "v"}, {35, "r"}, {2, "p"}, {181, "t"}, {296, "r"}, {157, "l"}, {309, "a"}, {149, "g"}, {142, "f"}, {154, "i"}, {83, "e"}, {203, "e"}, {271, "y"}, {141, "w"}, {306, "n"}, {22, "f"}, {326, "k"}, {289, "g"}, {248, "a"}, {201, "l"}, {158, "g"}, {328, "r"}, {192, "a"}, {244, "v"}, {60, "v"}, {161, "g"}, {73, "y"}, {94, "n"}, {86, "t"}, {89, "g"}, {110, "l"}, {88, "r"}, {155, "i"}, {12, "e"}, {196, "p"}, {32, "e"}, {129, "e"}, {221, "i"}, {268, "e"}, {273, "n"}, {169, "k"}, {18, "l"}, {220, "l"}, {126, "r"}, {212, "p"}, {230, "k"}, {276, "l"}, {222, "n"}, {78, "d"}, {314, "e"}, {123, "r"}, {144, "g"}, {160, "i"}, {55, "r"}, {321, "n"}, {274, "e"}, {41, "k"}, {159, "r"}, {269, "e"}, {325, "i"}, {37, "i"}, {99, "l"}, {191, "n"}, {23, "e"}, {182, "r"}, {316, "p"}, {167, "r"}, {11, "p"}, {166, "k"}, {257, "w"}, {312, "r"}, {34, "p"}, {323, "e"}, {87, "k"}, {259, "a"}, {262, "g"}, {91, "y"}, {258, "i"}, {92, "v"}, {260, "g"}, {275, "e"}, {10, "i"}}

count = 0
for throwaway, pair in pairs(parent_table) do
cur = structure.GetAminoAcid(pair[1]) 
  if cur == pair[2] then
    --
  else
    print("Looking at position", pair[1])
    print("Wild type has", pair[2])
    print("Current pose has", cur) 
    print("Mutation: ", pair[2], "to", cur, "at", pair[1])
    structure.SetAminoAcid(pair[1], pair[2])
    count = count + 1 
  end
end
print("Displaying native residues as", count, "mutations to this design")

