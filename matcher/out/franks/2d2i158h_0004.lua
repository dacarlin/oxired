parent_table={{57, "n"}, {98, "s"}, {311, "k"}, {52, "v"}, {229, "k"}, {338, "g"}, {238, "p"}, {139, "d"}, {198, "l"}, {256, "i"}, {161, "a"}, {332, "l"}, {209, "v"}, {67, "i"}, {164, "a"}, {225, "e"}, {37, "t"}, {81, "n"}, {306, "d"}, {218, "a"}, {327, "v"}, {216, "a"}, {294, "s"}, {282, "p"}, {19, "r"}, {76, "i"}, {310, "v"}, {136, "g"}, {131, "g"}, {77, "v"}, {146, "d"}, {186, "l"}, {91, "d"}, {219, "v"}, {265, "q"}, {30, "e"}, {96, "i"}, {6, "a"}, {153, "a"}, {53, "l"}, {321, "g"}, {243, "s"}, {102, "f"}, {24, "r"}, {159, "c"}, {261, "n"}, {114, "a"}, {303, "l"}, {242, "v"}, {298, "d"}, {182, "h"}, {274, "g"}, {100, "g"}, {234, "a"}, {318, "n"}, {248, "v"}, {68, "t"}, {210, "p"}, {196, "r"}, {158, "h"}, {73, "t"}, {230, "l"}, {110, "k"}, {232, "g"}, {177, "t"}, {297, "v"}, {331, "e"}, {176, "g"}, {197, "d"}, {231, "n"}, {288, "f"}, {118, "k"}, {61, "s"}, {126, "k"}, {323, "s"}, {249, "v"}, {213, "t"}, {173, "i"}, {75, "k"}, {130, "v"}, {119, "v"}, {18, "l"}, {141, "e"}, {150, "i"}, {85, "l"}, {204, "a"}, {241, "n"}, {262, "e"}, {277, "k"}, {94, "l"}, {163, "v"}, {74, "m"}, {208, "i"}, {240, "p"}, {325, "r"}, {313, "i"}, {279, "s"}, {264, "l"}, {46, "l"}, {185, "t"}, {66, "s"}, {151, "s"}, {89, "e"}, {309, "l"}, {83, "l"}, {80, "r"}, {106, "e"}, {38, "s"}, {217, "k"}, {49, "y"}, {128, "e"}, {286, "s"}, {278, "y"}, {155, "a"}, {266, "k"}, {50, "d"}, {199, "r"}, {62, "y"}, {36, "n"}, {84, "n"}, {12, "r"}, {40, "a"}, {120, "l"}, {154, "s"}, {193, "a"}, {222, "v"}, {220, "a"}, {237, "v"}, {79, "d"}, {267, "a"}, {324, "q"}, {145, "e"}, {58, "a"}, {175, "k"}, {273, "k"}, {43, "a"}, {334, "a"}, {315, "w"}, {63, "d"}, {17, "f"}, {86, "p"}, {317, "d"}, {95, "v"}, {56, "f"}, {200, "r"}, {215, "a"}, {227, "k"}, {183, "s"}, {292, "d"}, {116, "a"}, {223, "i"}, {3, "i"}, {272, "m"}, {226, "l"}, {320, "w"}, {59, "d"}, {103, "v"}, {246, "d"}, {51, "s"}, {137, "v"}, {205, "a"}, {259, "q"}, {260, "v"}, {289, "r"}, {330, "a"}, {280, "d"}, {117, "k"}, {254, "p"}, {39, "d"}, {70, "n"}, {172, "g"}, {10, "f"}, {300, "s"}, {160, "l"}, {168, "h"}, {239, "t"}, {78, "c"}, {276, "i"}, {328, "d"}, {14, "g"}, {123, "a"}, {5, "v"}, {44, "a"}, {115, "g"}, {188, "q"}, {251, "v"}, {270, "t"}, {271, "t"}, {295, "s"}, {166, "v"}, {148, "a"}, {127, "a"}, {192, "d"}, {92, "i"}, {250, "q"}, {135, "i"}, {21, "w"}, {25, "q"}, {152, "a"}, {296, "i"}, {108, "a"}, {181, "t"}, {322, "g"}, {252, "e"}, {221, "l"}, {308, "d"}, {189, "r"}, {263, "v"}, {174, "i"}, {72, "k"}, {142, "y"}, {82, "p"}, {190, "i"}, {287, "d"}, {35, "n"}, {99, "t"}, {207, "n"}, {305, "m"}, {314, "a"}, {316, "y"}, {326, "v"}, {4, "r"}, {87, "w"}, {11, "g"}, {109, "s"}, {60, "i"}, {144, "h"}, {212, "t"}, {195, "h"}, {233, "i"}, {149, "v"}, {191, "l"}, {140, "s"}, {302, "t"}, {147, "f"}, {111, "h"}, {107, "g"}, {156, "t"}, {157, "t"}, {167, "l"}, {224, "p"}, {290, "g"}, {291, "t"}, {104, "t"}, {307, "g"}, {8, "n"}, {20, "c"}, {180, "t"}, {268, "s"}, {283, "l"}, {15, "r"}, {178, "m"}, {194, "s"}, {113, "q"}, {257, "t"}, {88, "k"}, {253, "k"}, {255, "t"}, {284, "v"}, {124, "p"}, {275, "i"}, {133, "y"}, {301, "l"}, {71, "g"}, {202, "r"}, {329, "l"}, {269, "q"}, {214, "g"}, {23, "g"}, {22, "f"}, {26, "n"}, {33, "a"}, {69, "v"}, {97, "e"}, {169, "d"}, {27, "t"}, {54, "g"}, {28, "d"}, {101, "v"}, {129, "g"}, {228, "g"}, {235, "l"}, {47, "l"}, {299, "s"}, {165, "k"}, {7, "i"}, {245, "v"}, {171, "f"}, {258, "e"}, {335, "r"}, {304, "v"}, {187, "d"}, {337, "s"}, {184, "y"}, {48, "e"}, {16, "n"}, {122, "t"}, {206, "v"}, {34, "i"}, {281, "l"}, {31, "v"}, {42, "t"}, {162, "p"}, {32, "v"}, {179, "t"}, {138, "n"}, {132, "t"}, {121, "i"}, {93, "d"}, {45, "h"}, {333, "a"}, {336, "k"}, {319, "e"}, {134, "v"}, {55, "r"}, {112, "i"}, {41, "r"}, {312, "v"}, {143, "r"}, {170, "n"}, {203, "a"}, {1, "m"}, {13, "i"}, {2, "t"}, {65, "n"}, {105, "a"}, {125, "g"}, {211, "t"}, {236, "r"}, {293, "e"}, {244, "v"}, {9, "g"}, {285, "s"}, {90, "w"}, {29, "l"}, {201, "a"}, {247, "l"}, {64, "e"}}

count = 0
for throwaway, pair in pairs(parent_table) do
cur = structure.GetAminoAcid(pair[1]) 
  if cur == pair[2] then
    --
  else
    print("Looking at position", pair[1])
    print("Wild type has", pair[2])
    print("Current pose has", cur) 
    print("Mutation: ", pair[2], "to", cur, "at", pair[1])
    structure.SetAminoAcid(pair[1], pair[2])
    count = count + 1 
  end
end
print("Displaying native residues as", count, "mutations to this design")

