parent_table={{11, "p"}, {164, "k"}, {172, "i"}, {219, "n"}, {303, "i"}, {322, "i"}, {47, "l"}, {59, "f"}, {69, "a"}, {78, "i"}, {120, "d"}, {230, "i"}, {272, "l"}, {281, "t"}, {97, "l"}, {326, "g"}, {199, "r"}, {116, "v"}, {256, "g"}, {79, "d"}, {197, "l"}, {233, "n"}, {270, "e"}, {177, "r"}, {279, "v"}, {274, "k"}, {289, "f"}, {157, "r"}, {252, "g"}, {267, "y"}, {26, "w"}, {104, "l"}, {165, "r"}, {260, "d"}, {223, "l"}, {183, "v"}, {103, "d"}, {138, "k"}, {49, "t"}, {73, "v"}, {301, "n"}, {52, "e"}, {87, "g"}, {224, "k"}, {130, "k"}, {198, "l"}, {254, "i"}, {56, "k"}, {300, "k"}, {304, "a"}, {161, "a"}, {316, "n"}, {75, "y"}, {163, "a"}, {273, "f"}, {251, "e"}, {61, "n"}, {249, "l"}, {151, "g"}, {133, "v"}, {220, "e"}, {284, "i"}, {31, "e"}, {89, "y"}, {108, "l"}, {7, "t"}, {216, "h"}, {225, "l"}, {269, "n"}, {299, "a"}, {107, "a"}, {188, "n"}, {205, "v"}, {308, "g"}, {305, "f"}, {93, "t"}, {201, "s"}, {200, "e"}, {63, "p"}, {222, "r"}, {168, "g"}, {143, "y"}, {243, "n"}, {319, "v"}, {16, "k"}, {129, "k"}, {33, "p"}, {150, "i"}, {152, "i"}, {160, "q"}, {184, "e"}, {29, "e"}, {204, "v"}, {218, "i"}, {235, "a"}, {38, "l"}, {276, "d"}, {261, "v"}, {311, "p"}, {17, "l"}, {110, "l"}, {209, "p"}, {106, "f"}, {278, "v"}, {202, "d"}, {39, "k"}, {195, "e"}, {234, "i"}, {258, "g"}, {302, "l"}, {23, "v"}, {15, "i"}, {20, "e"}, {277, "n"}, {2, "p"}, {290, "g"}, {210, "l"}, {295, "a"}, {132, "g"}, {288, "s"}, {24, "e"}, {139, "w"}, {171, "r"}, {240, "v"}, {126, "g"}, {68, "v"}, {170, "n"}, {174, "y"}, {283, "h"}, {310, "i"}, {44, "v"}, {50, "s"}, {148, "k"}, {173, "l"}, {135, "w"}, {12, "e"}, {4, "v"}, {125, "s"}, {94, "p"}, {101, "t"}, {232, "i"}, {309, "e"}, {77, "n"}, {179, "r"}, {246, "v"}, {285, "g"}, {159, "g"}, {266, "p"}, {324, "k"}, {45, "d"}, {207, "a"}, {145, "v"}, {186, "e"}, {5, "f"}, {71, "y"}, {76, "d"}, {117, "v"}, {36, "i"}, {51, "s"}, {6, "i"}, {156, "g"}, {185, "r"}, {46, "a"}, {227, "k"}, {18, "e"}, {55, "d"}, {115, "h"}, {149, "t"}, {57, "e"}, {13, "v"}, {208, "v"}, {236, "r"}, {41, "v"}, {83, "a"}, {296, "e"}, {250, "k"}, {241, "d"}, {323, "r"}, {144, "d"}, {22, "e"}, {206, "l"}, {275, "l"}, {189, "a"}, {196, "d"}, {30, "k"}, {293, "e"}, {306, "k"}, {62, "a"}, {81, "e"}, {153, "i"}, {264, "e"}, {95, "d"}, {118, "k"}, {242, "t"}, {318, "e"}, {111, "a"}, {217, "l"}, {100, "a"}, {231, "l"}, {141, "l"}, {191, "f"}, {123, "v"}, {253, "w"}, {325, "p"}, {112, "t"}, {315, "v"}, {121, "r"}, {122, "f"}, {19, "d"}, {245, "l"}, {65, "l"}, {131, "r"}, {237, "g"}, {54, "i"}, {91, "t"}, {265, "e"}, {259, "l"}, {181, "e"}, {213, "e"}, {187, "l"}, {229, "a"}, {99, "d"}, {127, "e"}, {263, "e"}, {282, "p"}, {162, "i"}, {321, "k"}, {154, "g"}, {14, "g"}, {291, "a"}, {294, "g"}, {140, "f"}, {320, "i"}, {37, "l"}, {262, "f"}, {86, "r"}, {113, "a"}, {48, "v"}, {27, "g"}, {114, "r"}, {146, "y"}, {215, "y"}, {247, "k"}, {102, "a"}, {67, "i"}, {58, "v"}, {194, "l"}, {8, "r"}, {124, "r"}, {271, "e"}, {66, "r"}, {255, "a"}, {307, "r"}, {212, "r"}, {239, "v"}, {238, "k"}, {90, "v"}, {82, "e"}, {1, "k"}, {297, "l"}, {28, "d"}, {9, "e"}, {74, "h"}, {84, "t"}, {10, "i"}, {134, "a"}, {226, "k"}, {244, "a"}, {169, "f"}, {80, "i"}, {53, "r"}, {167, "k"}, {34, "r"}, {313, "t"}, {60, "e"}, {137, "p"}, {109, "l"}, {180, "k"}, {176, "s"}, {32, "i"}, {190, "e"}, {211, "t"}, {203, "f"}, {312, "p"}, {96, "v"}, {166, "a"}, {327, "f"}, {193, "p"}, {85, "k"}, {147, "g"}, {119, "g"}, {88, "i"}, {42, "k"}, {158, "i"}, {192, "k"}, {43, "e"}, {221, "e"}, {3, "k"}, {72, "g"}, {178, "t"}, {228, "t"}, {268, "y"}, {287, "a"}, {182, "e"}, {128, "w"}, {136, "h"}, {248, "a"}, {175, "y"}, {314, "l"}, {70, "n"}, {64, "k"}, {280, "l"}, {292, "r"}, {155, "l"}, {286, "s"}, {298, "v"}, {98, "t"}, {105, "a"}, {214, "t"}, {142, "g"}, {35, "e"}, {92, "n"}, {257, "a"}, {317, "r"}, {40, "k"}, {25, "v"}, {21, "f"}}


count = 0
for throwaway, pair in pairs(parent_table) do
  print("Looking at position", pair[1])
  print("Wild type has", pair[2])
  print("Current pose has", cur) 

  cur = structure.GetAminoAcid(pair[1]) 
  if cur == pair[2] then
    -- lua comment
  else
    print("Mutating ", pair[2], "to", cur, "at", pair[1])
    structure.SetAminoAcid(pair[1], pair[2])
    count = count + 1 
  end
end
print("Displaying native residues as", count, "mutations to this design")

